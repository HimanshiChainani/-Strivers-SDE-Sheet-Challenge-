vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
    if(root==NULL) return ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    bool flag=true;
    while(!q.empty()){
        int size= q.size();
        vector<int> row(size);
        for(int i=0; i<size; i++){
            BinaryTreeNode<int> *node= q.front();
            q.pop();
            int ind= flag? i: (size-1-i);
            row[ind]= node->data;
            if(node->left) q.push(node->left);
            if(node->right) q.push(node->right);
        }
        flag= !flag;
        for(int i=0; i<row.size(); i++){
            ans.push_back(row[i]);
        }
    }
    return ans;
}
