long long int maxPathDown(TreeNode<int>* root, long long int & maxi){
        if(root==NULL) return 0;
        if(root->left==NULL && root->right==NULL) return root->val;
        long long int left= maxPathDown(root->left, maxi);
        long long int right= maxPathDown(root->right, maxi);
        long long int val= left+right+ root->val;
        if(root->left!=NULL && root->right!=NULL){
            maxi= max(maxi, (left+right+ root->val));
        return (max(right, left)+ root->val);
        }
        else if(root->left==NULL){
            return right+ root->val;
        }
        else{
            return left+ root->val;
        }
        
    }
long long int findMaxSumPath(TreeNode<int> *root)
{
    // Write your code here.
    long long int maxi = -1;
  maxPathDown(root, maxi);
  return maxi;
}
