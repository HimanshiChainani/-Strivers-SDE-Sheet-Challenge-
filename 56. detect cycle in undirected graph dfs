#include <queue>
bool checkForCycle(int node, int parent, vector < int > & vis, vector < int > adj[]) {
      vis[node] = 1;
    for (auto it : adj[node]) {
        if (!vis[it]) {
            if (checkForCycle(it, node, vis, adj))
                return true;
        } else if (it != parent) {
            return true;
        }
    }
    return false;
    }
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> adj[n + 1];

    for (auto it : edges) {
        int u = it[0];
        int v = it[1];
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    vector<int> vis(n + 1, 0);
    for (int i = 1; i <= n; i++) {
        if (!vis[i]) {
            if (checkForCycle(i, -1, vis, adj))
                return "Yes";
        }
    }
    return "No";
    
}
