vector<int> leftView(Node *root)
{
   vector<int> ans;
        queue<Node*> q;
        q.push(root);
        
        if(root==NULL) return ans;
        while(1){
            int size= q.size();
            if(size==0) return ans;
            int data1=0;
            int count=0;
            while(size>0){
                Node* temp = q.front();
                q.pop();
                if(count==0){
                    ans.push_back(temp->data);
                }
                if(temp->left!=NULL) 
                    q.push(temp->left);
                if(temp->right!=NULL)
                    q.push(temp->right);
                size--;
                count++; 
            }
            
        }
        return ans;
    
}

//or

void func(TreeNode<int>* root, int level, vector<int> & ans){
    if(root==NULL) return;
    if(level==ans.size()) ans.push_back(root->data);
    func(root->left, level+1, ans);
    func(root->right, level+1, ans);

}
vector<int> getLeftView(TreeNode<int> *root)
{
    //    Write your code here
    vector<int> ans;
    func(root, 0, ans);
    return ans;
}
